# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net),
# te_4_st@test.com - верно указан.

import re

while True:

    name = input('Your name: ')
    sername = input('Your sername: ')
    email = input('Your full email-address (ex: vasya_pupkin98@mail.ru): \n')

    pattern_names = '^[A-ZА-Я][a-zа-я]+$'
    pattern_email = '^[a-z_0-9]+@[a-z0-9]+\.(com|ru|org)$'

    if re.search(pattern_names, name) is None or re.search(pattern_names, sername) is None:
        print('Неверно указано имя {}{}. Повторите попытку'. format(name, sername))
    elif re.search(pattern_email, email) is None:
        print('Неверно указан email {}. Повторите попытку'.format(email))
    else:
        break

print('Все верно. Ваши данные {} {}, {}'.format(name, sername, email))

print('\n--------------------------------------------------\n')

     # Задача - 2:
# Вам дан текст:

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

pattern_poem = '\.\.'

if re.search(pattern_poem, some_str) is None:
    print('В тексте:\n{}\n\n\nНЕ ВСТРЕЧАЮТСЯ 2 или более точки, идущие подряд'.format(some_str))
else:
    print('В тексте:\n{}\n\n\nВСТРЕЧАЮТСЯ 2 или более точки, идущие подряд'.format(some_str))

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!